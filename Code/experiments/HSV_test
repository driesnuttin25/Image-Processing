import cv2
import numpy as np

def nothing(x):
    pass

# 1. Load image
img = cv2.imread('c:/Users/dries/Desktop/Image_Processing/Image_processing_task/screenshot.jpg')

if img is None:
    raise IOError("Could not read the image file. Check the path!")

# 2. Create windows (one for trackbars, optional ones for visualization)
cv2.namedWindow('Trackbars')
cv2.namedWindow('Original')
cv2.namedWindow('Mask')
cv2.namedWindow('Result')

# 3. Create trackbars for lower/upper H, S, V.
# Hue in OpenCV goes from 0 to 179, while Saturation and Value go 0 to 255.
cv2.createTrackbar('LowerH', 'Trackbars', 0,   179, nothing)
cv2.createTrackbar('UpperH', 'Trackbars', 179, 179, nothing)
cv2.createTrackbar('LowerS', 'Trackbars', 0,   255, nothing)
cv2.createTrackbar('UpperS', 'Trackbars', 255, 255, nothing)
cv2.createTrackbar('LowerV', 'Trackbars', 0,   255, nothing)
cv2.createTrackbar('UpperV', 'Trackbars', 255, 255, nothing)

while True:
    # 4. Convert to HSV. 
    # If you want to try LAB or YCrCb, change COLOR_BGR2HSV to COLOR_BGR2LAB, etc.
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    # 5. Get current positions of the six trackbars
    l_h = cv2.getTrackbarPos('LowerH','Trackbars')
    u_h = cv2.getTrackbarPos('UpperH','Trackbars')
    l_s = cv2.getTrackbarPos('LowerS','Trackbars')
    u_s = cv2.getTrackbarPos('UpperS','Trackbars')
    l_v = cv2.getTrackbarPos('LowerV','Trackbars')
    u_v = cv2.getTrackbarPos('UpperV','Trackbars')

    # 6. Define lower and upper arrays for the mask
    lower_bound = np.array([l_h, l_s, l_v])
    upper_bound = np.array([u_h, u_s, u_v])

    # 7. Threshold the HSV image to get only the colors within the range
    mask = cv2.inRange(hsv, lower_bound, upper_bound)

    # 8. Bitwise-AND mask and original image so we see the “filtered” part
    result = cv2.bitwise_and(img, img, mask=mask)

    # 9. Show everything
    cv2.imshow('Original', img)
    cv2.imshow('Mask', mask)
    cv2.imshow('Result', result)

    # 10. ESC key breaks the loop
    key = cv2.waitKey(1)
    if key == 27:  # ESC key
        break

cv2.destroyAllWindows()
